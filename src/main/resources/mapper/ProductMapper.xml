<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qakj.crm.mapper.ProductMapper" >

	<select id="selectByLimit" parameterType="map" resultMap="BaseResultMap">
		select * from products limit #{start},#{len}
	
	</select>
  <resultMap id="BaseResultMap" type="com.qakj.crm.pojo.Product" >
    <id column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="product_core" property="productCore" jdbcType="VARCHAR" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="supplier_id" property="supplierId" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="production_date" property="productionDate" jdbcType="DATE" />
    <result column="shelf_life" property="shelfLife" jdbcType="INTEGER" />
    <result column="descript" property="descript" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    product_id, product_core, product_name, supplier_id, price, production_date, shelf_life, 
    descript
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qakj.crm.pojo.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from products
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from products
    where product_id = #{productId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from products
    where product_id = #{productId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qakj.crm.pojo.ProductExample" >
    delete from products
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qakj.crm.pojo.Product" >
    insert into products (product_id, product_core, product_name, 
      supplier_id, price, production_date, 
      shelf_life, descript)
    values (#{productId,jdbcType=INTEGER}, #{productCore,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, 
      #{supplierId,jdbcType=INTEGER}, #{price,jdbcType=INTEGER}, #{productionDate,jdbcType=DATE}, 
      #{shelfLife,jdbcType=INTEGER}, #{descript,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qakj.crm.pojo.Product" >
    insert into products
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="productId != null" >
        product_id,
      </if>
      <if test="productCore != null" >
        product_core,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="supplierId != null" >
        supplier_id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="productionDate != null" >
        production_date,
      </if>
      <if test="shelfLife != null" >
        shelf_life,
      </if>
      <if test="descript != null" >
        descript,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="productCore != null" >
        #{productCore,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null" >
        #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="productionDate != null" >
        #{productionDate,jdbcType=DATE},
      </if>
      <if test="shelfLife != null" >
        #{shelfLife,jdbcType=INTEGER},
      </if>
      <if test="descript != null" >
        #{descript,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qakj.crm.pojo.ProductExample" resultType="java.lang.Integer" >
    select count(*) from products
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update products
    <set >
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.productCore != null" >
        product_core = #{record.productCore,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null" >
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierId != null" >
        supplier_id = #{record.supplierId,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.productionDate != null" >
        production_date = #{record.productionDate,jdbcType=DATE},
      </if>
      <if test="record.shelfLife != null" >
        shelf_life = #{record.shelfLife,jdbcType=INTEGER},
      </if>
      <if test="record.descript != null" >
        descript = #{record.descript,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update products
    set product_id = #{record.productId,jdbcType=INTEGER},
      product_core = #{record.productCore,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      supplier_id = #{record.supplierId,jdbcType=INTEGER},
      price = #{record.price,jdbcType=INTEGER},
      production_date = #{record.productionDate,jdbcType=DATE},
      shelf_life = #{record.shelfLife,jdbcType=INTEGER},
      descript = #{record.descript,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qakj.crm.pojo.Product" >
    update products
    <set >
      <if test="productCore != null" >
        product_core = #{productCore,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null" >
        supplier_id = #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="productionDate != null" >
        production_date = #{productionDate,jdbcType=DATE},
      </if>
      <if test="shelfLife != null" >
        shelf_life = #{shelfLife,jdbcType=INTEGER},
      </if>
      <if test="descript != null" >
        descript = #{descript,jdbcType=VARCHAR},
      </if>
    </set>
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qakj.crm.pojo.Product" >
    update products
    set product_core = #{productCore,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      supplier_id = #{supplierId,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      production_date = #{productionDate,jdbcType=DATE},
      shelf_life = #{shelfLife,jdbcType=INTEGER},
      descript = #{descript,jdbcType=VARCHAR}
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
</mapper>